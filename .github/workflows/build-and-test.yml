name: Build & test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      matrix:
        rust:
          - stable
          - beta
          - nightly
        features:
          - serde
          - base64
          - simd_backend
          - default
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        exclude:
          - rust: stable
            features: simd_backend
          - rust: beta
            features: simd_backend
          - os: windows-latest
            features: simd_backend
    runs-on: ${{ matrix.os }}
    env:
      FEATURES: ${{ matrix.rust != 'nightly' && matrix.features || format('{0},nightly', matrix.features) }}
    steps:
      - uses: actions/checkout@v3
      - name: Cache Cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: cargo-${{ runner.os }}-${{ runner.arch }}
          restore-keys: |
            cargo-${{ runner.os }}-
            cargo-
      - name: Cache target
        uses: actions/cache@v3
        with:
          path: |
            target
          key: target-${{ runner.os }}-${{ runner.arch }}-${{ matrix.features }}
      - name: Install Rust toolchain
        uses: brndnmtthws/rust-action-rustup@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          components: rustfmt, clippy
      - run: cargo build --features ${{ env.FEATURES }}
      - run: cargo test --features ${{ env.FEATURES }}
        env:
          RUST_BACKTRACE: 1
      - run: cargo fmt --all -- --check
        if: ${{ matrix.rust == 'nightly' && matrix.os == 'ubuntu-latest' }}
      - run: cargo clippy --features ${{ env.FEATURES }} -- -D warnings
